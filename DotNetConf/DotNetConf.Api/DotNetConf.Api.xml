<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetConf.Api</name>
    </assembly>
    <members>
        <member name="T:DotNetConf.Api.Common.Literal">
            <summary>
            Core literal
            </summary>
        </member>
        <member name="T:DotNetConf.Api.Controllers.DictionaryController">
            <summary>
            DictionaryController
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Controllers.DictionaryController.Get">
             <summary>
             Dictionary with non complex key 
             </summary>
             <response code="200">Dictionary with non complex key 
            can convert to System.String.
             </response>          
             <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Controllers.DictionaryController.GetByPersonKey">
            <summary>
            Get person fixture, System.NotSupportedException
            </summary>
            <response code="500">System.Text.Json doesn't deserialize non-string values into string properties.
            A non-string value received for a string field results in a JsonException with the following message:
            The JSON value could not be converted to System.String.
            </response>          
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Controllers.PersonController">
            <summary>
            PersonController
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Controllers.PersonController.#ctor(DotNetConf.Api.Service.Interface.IPersonService)">
            <summary>
            Ctor
            </summary>
            <param name="service"></param>
        </member>
        <member name="M:DotNetConf.Api.Controllers.PersonController.Get">
            <summary>
            Get persons
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Controllers.PersonController.GetById(System.Int32)">
            <summary>
            Get person by id
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Controllers.PersonController.Create(DotNetConf.Api.Entity.Person)">
            <summary>
            Create
            </summary>
            <param name="person"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Controllers.SelfReferencingController">
            <summary>
            SelfReferencingController
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Controllers.SelfReferencingController.Get">
            <summary>
            Self referencing error
            </summary>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Entity.ReadOnlyDbContext">
            <summary>
            ReadOnlyDbContext
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Entity.ReadOnlyDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{DotNetConf.Api.Entity.DotNetConfContext})">
            <summary>
            Ctor
            </summary>
            <param name="options"></param>
        </member>
        <member name="T:DotNetConf.Api.Extension.ContextExtension">
            <summary>
            Context extension
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Extension.ContextExtension.AddContext(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,DotNetConf.Api.Model.ConnectionStringsConfigModel)">
            <summary>
            Added contexts and sql data log
            </summary>
            <param name="services"></param>
            <param name="configuration"></param>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Extension.HealthCheckExtension">
            <summary>
            Health check extensions
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Extension.HealthCheckExtension.ConfigureHealthChecks(Microsoft.Extensions.DependencyInjection.IServiceCollection,DotNetConf.Api.Model.ConnectionStringsConfigModel,DotNetConf.Api.Model.HealthChecksConfigModel)">
            <summary>
            UseHealthChecks
            </summary>
            <param name="services"></param>
            <param name="connectionStringConfig"></param>
            <param name="healthChecksConfig"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Extension.SwaggerExtension">
            <summary>
            Swagger extensions
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Extension.SwaggerExtension.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configure swagger
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Model.ConnectionStringsConfigModel">
            <summary>
            Connection string model
            </summary>
        </member>
        <member name="T:DotNetConf.Api.Model.SelfReferencing.Department">
            <summary>
            Department
            </summary>
        </member>
        <member name="P:DotNetConf.Api.Model.SelfReferencing.Department.StaffMembers">
            <summary>
            StaffMembers
            </summary>
        </member>
        <member name="T:DotNetConf.Api.Model.SelfReferencing.StaffMember">
            <summary>
            StaffMember
            </summary>
        </member>
        <member name="P:DotNetConf.Api.Model.SelfReferencing.StaffMember.FirstName">
            <summary>
            FirstName
            </summary>
        </member>
        <member name="P:DotNetConf.Api.Model.SelfReferencing.StaffMember.Department">
            <summary>
            Department
            </summary>
        </member>
        <member name="T:DotNetConf.Api.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Program.Main(System.String[])">
            <summary>
            Start point
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:DotNetConf.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Service.Implementation.PersonService">
            <summary>
            Person service
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Service.Implementation.PersonService.#ctor(DotNetConf.Api.Entity.DotNetConfContext)">
            <summary>
            Ctor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:DotNetConf.Api.Service.Implementation.PersonService.GetPersons">
            <summary>
            Get all persons
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Service.Implementation.PersonService.GetPersonById(System.Int32)">
            <summary>
            GetPersonById
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Service.Implementation.PersonService.AddPerson(DotNetConf.Api.Entity.Person)">
            <summary>
            AddPerson
            </summary>
            <param name="person"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Service.Interface.IPersonService">
            <summary>
            IPersonService
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Service.Interface.IPersonService.GetPersons">
            <summary>
            GetPersons
            </summary>
            <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Service.Interface.IPersonService.AddPerson(DotNetConf.Api.Entity.Person)">
            <summary>
            AddPerson
            </summary>
            <param name="person"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetConf.Api.Service.Interface.IPersonService.GetPersonById(System.Int32)">
            <summary>
            GetPersonById
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:DotNetConf.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="P:DotNetConf.Api.Startup.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:DotNetConf.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Ctor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:DotNetConf.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            ConfigureServices
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DotNetConf.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Configure pipeline
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
